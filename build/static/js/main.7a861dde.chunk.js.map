{"version":3,"sources":["App.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getProfit","asyncToGenerator","regenerator_default","a","mark","_callee","tronWeb","wrap","_context","prev","next","window","contract","defaultAddress","base58","then","output","mas","parseInt","_hex","setState","profit","stop","totalInvested","_callee2","_context2","invested","totalRefPayout","Math","round","investors","_callee3","_context3","totalPlayers","getContractData","_callee4","_context4","players","trxDeposit","aff1sum","aff2sum","aff3sum","aff4sum","affRewards","payoutSum","refreshBalance","_callee5","_context5","t0","trx","getBalance","address","t1","sent","t2","balance","refreshTokenBalance","_callee6","_context6","balances","state","tokenBalance","toString","getContractBalance","_callee7","_context7","balancesmart","console","log","withdraw","_callee8","_context8","send","alert","reinvest","_callee9","_context9","from","setDefaultBlock","youraddress","referralrewards","totalPayout","globalinvest","upline","uri","location","host","fromHex","artifact","setInterval","_this2","setTimeout","referralid","search","split","num","document","getElementById","value","addref","isAddress","deposit","callValue","Number","copyText","select","setSelectionRange","execCommand","_this3","react_default","createElement","className","href","id","defaultValue","type","name","button","onClick","invest","copytextInpt","lass","Component","waitForGlobal","_ref","nodes","connected","isConnected","entries","map","_ref2","_ref3","slicedToArray","includes","ReactDOM","render","src_App","apply","arguments"],"mappings":"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","file":"static/js/main.7a861dde.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nimport * as artifact from \"./contracts/Token\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    window.tronWeb.setDefaultBlock(\"latest\");\n\n    this.contract = null;\n    this.state = {\n      address: null,\n      youraddress: null,\n      balance: 0,\n      contract: null,\n      tokenBalance: 0,\n      profit: 0,\n      referralrewards: 0,\n      investors: 0,\n      totalPayout: 0,\n      globalinvest: 0,\n      invested: 0,\n      totalRefPayout: 0,\n      aff1sum: 0,\n        aff2sum: 0,\n        aff3sum:0,\n      payoutSum: 0,\n      upline: 0,\n        uri: window.location.host,\n        balancesmart:0\n    };\n  }\n\n  async componentDidMount() {\n    let tronWeb = window.tronWeb;\n    this.setState({\n      address:\n        \" https://\" +\n        this.state.uri +\n        \"/?upline=\" +\n        tronWeb.defaultAddress.base58,\n    });\n    this.setState({ youraddress: tronWeb.defaultAddress.base58 });\n    let address = tronWeb.address.fromHex(artifact.networks[\"*\"].address);\n    this.contract = tronWeb.contract(artifact.abi, address);\n\n    setInterval(() => {\n      this.refreshBalance();\n      this.getContractBalance();\n      this.getProfit();\n      this.totalInvested();\n      this.investors();\n      this.getContractData();\n    }, 2000);\n    setTimeout(() => {\n      const queryString = window.location.search;\n      const urlParams = queryString.split(\"upline=\");\n      const referralid = urlParams[1];\n      console.log(referralid,'referralid')\n      this.setState({ upline: referralid });\n    }, 100);\n  }\n\n  getProfit = async () => {\n    let tronWeb = window.tronWeb;\n\n    this.contract\n      .getProfit(tronWeb.defaultAddress.base58)\n      .call()\n      .then((output) => {\n        const mas = parseInt(output._hex, 16) / 1e6;\n        this.setState({ profit: mas });\n      });\n  };\n  totalInvested = async () => {\n    let tronWeb = window.tronWeb;\n    this.contract\n      .totalInvested()\n      .call()\n      .then((output) => {\n        this.setState({\n          invested: parseInt(output._hex, 16) / 1e6,\n          totalRefPayout: Math.round((parseInt(output._hex, 16) / 1e6) * 0.15),\n        });\n      });\n  };\n  investors = async () => {\n    this.contract\n      .totalPlayers()\n      .call()\n      .then((output) => {\n        this.setState({ investors: 2 * parseInt(output._hex, 16) });\n      });\n  };\n  getContractData = async () => {\n    let tronWeb = window.tronWeb;\n    this.contract\n      .players(tronWeb.defaultAddress.base58)\n      .call()\n      .then((output) => {\n        this.setState({\n          trxDeposit: parseInt(output.trxDeposit._hex, 16) / 1e6,\n          aff1sum: parseInt(output.aff1sum._hex, 16),\n          aff2sum: parseInt(output.aff2sum._hex, 16),\n          aff3sum: parseInt(output.aff3sum._hex, 16),\n          aff4sum: parseInt(output.aff4sum._hex, 16),\n          affRewards: parseInt(output.affRewards._hex, 16) / 1e6,\n          payoutSum:\n            parseInt(output.payoutSum._hex, 16) / 1e6 +\n            parseInt(output.affRewards._hex, 16) / 1e6,\n        });\n      });\n  };\n\n  refreshBalance = async () => {\n    let tronWeb = window.tronWeb;\n    this.setState({ balance: await tronWeb.trx.getBalance(this.address) });\n  };\n\n  refreshTokenBalance = async () => {\n    let tronWeb = window.tronWeb;\n    this.contract\n      .balances(this.state.address)\n      .call()\n      .then((output) => {\n        this.setState({ tokenBalance: output.toString() });\n      });\n  };\n\n  getContractBalance = async () => {\n    let tronWeb = window.tronWeb;\n    const address = \"TRpgpegBoRZhZYXY8pk51HSnRg2VF8HNS1\";\n      const balance = await tronWeb.trx.getBalance(address);\n      this.setState({ balancesmart: balance / 1e6  });\n      console.log(balance / 1e6 )\n  };\n\n  withdraw = async () => {\n    let tronWeb = window.tronWeb;\n    this.contract\n      .withdraw()\n      .send()\n      .then((output) => {\n        alert(\"Contract send withdraw:\");\n      });\n  };\n\n  reinvest = async () => {\n    let tronWeb = window.tronWeb;\n    this.contract\n      .reinvest()\n      .send({\n        from: tronWeb.defaultAddress.base58,\n      })\n      .then((output) => {\n        alert(\"Compound success\");\n      });\n  };\n  async invest() {\n    let tronWeb = window.tronWeb;\n    const num = document.getElementById(\"invest\").value;\n    console.log(num)\n    if (num > 99) {\n      const addref = tronWeb.isAddress(this.state.upline)\n        ? this.state.upline\n        : \"TTjeh4dbGvft7BwoVk9Qjq8xgiD8pZKUSC\";\n      this.contract\n        .deposit(addref)\n        .send({\n          callValue: 1e6 * Number(num),\n        })\n        .then((output) => {\n          alert(\"Invest success\");\n        });\n    } else {\n      alert(\"Your investment must be greater. at 20 TRX\");\n      document.getElementById(\"invest\").value = 22;\n    }\n  }\n  copytextInpt() {\n    /* Get the text field */\n    var copyText = document.getElementById(\"upline\");\n\n    /* Select the text field */\n    copyText.select();\n    copyText.setSelectionRange(0, 99999); /*For mobile devices*/\n\n    /* Copy the text inside the text field */\n    document.execCommand(\"copy\");\n\n    /* Alert the copied text */\n    alert(\"Copied the text: \" + copyText.value);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {/* Header init */}\n        <div className=\"me-main-header\">\n        <div className=\"container\">\n        <div className=\"row\">\n            <div className=\"col-sm-3 col-7\">\n                <div className=\"me-logo ptb\">\n                    <a className=\"amega\" href=\"/\">MEGA TRON</a>\n                </div>\n            </div>\n            <div className=\"col-sm-9 col-5\">\n                <div className=\"me-menu\">\n                    <ul>\n                        <li className=\"me-menu-children\"><a href=\"javascript:;\" className=\"me-active-menu\">Your Address : {this.state.youraddress}</a>\n                        \n                    </li>\n                   \n                    </ul>\n                    <div className=\"me-toggle-nav\">\n                        <span></span>\n                        <span></span>\n                        <span></span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n        {/* Header fin */}\n        {/* Banner */}\n        <div className=\"me-banner\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-7 col-12\">\n                <div className=\"me-banner-text\">\n                <h1>50% BASIC DAILY INCOME</h1>\n                        <div>\n                            <ul className=\"col-bs\">\n                                <li>✅Períodos: ∞</li>\n                                <li>🏦 Minimum deposit 100 TRX</li>\n                                <li>✅ Monthly profit: 1500%</li>\n                                <li>50% ROI DAILY🔥</li>\n                                <li>💸 11% Direct Referrals</li>\n                            </ul>\n                  </div>\n                  <br/>\n                  <a href=\"https://t.me/MegaTron\" className=\"me-btn\">Join Telegram</a>\n                    <a href=\"https://tronscan.io/#/contract/TRpgpegBoRZhZYXY8pk51HSnRg2VF8HNS1\" className=\"me-btn\">Verified Contract</a>\n                  </div>\n              </div>\n              <div className=\"col-md-5 col-12\">\n                <div className=\"me-banner-form\">\n                    <div className=\"me-banner-form-bg\">\n                        <h1>My investment\n                        </h1>\n                        \n                        <div className=\"me-flex\">\n                            Earn from the first moment you start investing make compound interest and share this opportunity\n\n                        </div>\n                    <div className=\"range-slider\">\n                    <input\n                        id=\"invest\"\n                        defaultValue=\"100\"\n                        type=\"number\"\n                        name=\"invest\"\n                        className=\" invest currency-input--src body-font font-w--600\"\n                      />\n                         \n                    </div>\n                    <p>Balance of Your : {this.state.balance / 1e6} TRX</p>\n                    <button button onClick={() => this.invest()} className=\"me-btn bgver\">Invest</button>\n                    <br/>\n                    <button button onClick={() => this.reinvest()} className=\"me-btn\">Compound</button>\n                    <button button onClick={() => this.withdraw()} className=\"me-btn blue\">Withdraw</button>\n                    <br />\n                    <p>1-3 TRX transaction fee will be applied</p>\n                    <p><a className=\"masr\" href=\"https://tronscan.io/#/contract/TRpgpegBoRZhZYXY8pk51HSnRg2VF8HNS1\">TRpgpegBoRZhZYXY8pk51HSnRg2VF8HNS1</a></p>\n                    </div>\n                </div>\n              </div>\n          \n            </div>\n             \n          </div>\n        </div>\n        {/* Banner fin */}\n        {/* INvest */}\n        <div className=\"me-feature\">\n          <div className=\"container\">\n\n            <div className=\"row\">\n             \n              <div className=\"col-lg-12 col-md-12\">\n              <h6>Referral link</h6>\n                <div className=\"input-group d-flex\">\n                  <input\n                    id=\"upline\"\n                    type=\"text\"\n                    className=\"dhs form-control\"\n                    defaultValue={this.state.address}\n                  />\n                  <button\n                    onClick={() => this.copytextInpt()}\n                    className=\"btn btn-hover--splash btn-bg--cta--1\"\n                    type=\"button\"\n                  >\n                    <span className=\"btn__text\">Copy</span>\n                  </button>\n                </div>\n                <p>\n                  Referral rewards will be transfered to your wallet directly.\n                  You do not need to manually withdraw them.\n                </p>\n                <br />\n                </div>\n          </div>\n       <br/>\n            <div className=\"row\">\n              <div className=\"col-lg-3 col-md-6\">\n                <div className=\"me-feature-box\">\n                <h2> Investors\n                    </h2>\n                    <p>{this.state.investors} </p> \n                 \n                  \n\n\n                  </div>\n              </div>\n              <div className=\"col-lg-3 col-md-6\">\n                <div className=\"me-feature-box\">\n                <h2> Invested\n                    </h2>\n                    <p>{this.state.invested} <strong>TRX</strong></p> \n            \n                  </div>\n              </div>\n              <div className=\"col-lg-3 col-md-6\">\n                <div className=\"me-feature-box\">\n                <h2>Balance smart contract \n                    </h2>\n                    <p>  {this.state.balancesmart}<strong>TRX</strong></p> \n            \n                  </div>\n              </div>\n              <div className=\"col-lg-3 col-md-6\">\n                <div className=\"me-feature-box\">\n                <h2>Total referral rewards\n                    </h2>\n                    <p>{this.state.totalRefPayout}<strong>TRX</strong></p>\n            \n                  </div>\n                </div>    \n            </div>\n            <br/>\n            <div className=\"row\">\n            <div className=\"col-lg-6 col-md-6\">\n                <div className=\"me-feature-box\">\n                <h2>Your investments\n\n                </h2>\n                  <p> {this.state.trxDeposit} <strong>TRX</strong></p>\n                </div>\n            </div>\n            <div className=\"col-lg-6 col-md-6\">\n                <div className=\"me-feature-box\">\n                    <h2>Available to withdraw\n\n                    </h2>\n                  <p>\n                  {this.state.profit}  <strong>TRX</strong>\n                  </p>\n                    </div>\n            </div>\n        </div>\n            \n    \n          </div>\n          \n          </div>\n        {/* inves */}\n\n      \n        {/* feature */}\n\n        <div className=\"me-how-work me-padder-top-less me-padder-bottom\">\n    <div className=\"container\">\n        <div className=\"me-heading2\">\n       \n            <h1>Referral Status <br/> Total Referral Rewards: {this.state.payoutSum}  TRX\n            </h1>\n        </div>\n        <div className=\"row\">\n            <div className=\"col-lg-4 col-md-6\">\n                <div className=\"me-hwork-box\">\n                    <div className=\"me-hwork-svg\">\n                    {this.state.aff1sum}                           \n                    </div>\n                    <h4 className=\"ama\">Direct(11%)</h4>\n                </div>\n            </div>\n            <div className=\"col-lg-4 col-md-6\">\n                <div className=\"me-hwork-box\">\n                    <div className=\"me-hwork-svg\">\n                    {this.state.aff2sum} \n                        </div>  \n                    <h4 lass=\"ama\"> Tier 1 (11%)</h4>\n                </div>\n            </div>\n            <div className=\"col-lg-4 col-md-6\">\n                <div className=\"me-hwork-box\">\n                    <div className=\"me-hwork-svg\">\n                    {this.state.aff3sum}                                                                        \n                    </div>\n                    <h4 lass=\"ama\">Tier 2 (11%)</h4>\n                </div>\n              </div>\n              \n            {/* <div className=\"col-lg-3 col-md-6\">\n                <div className=\"me-hwork-box\">\n                    <div className=\"me-hwork-svg\">\n                    {this.state.aff4sum}                                                       \n                    </div>\n                    <h4 className=\"ama\">Tier 3</h4>\n                </div>\n            </div> */}\n          \n            </div>\n        \n        \n     \n    </div>\n</div>\n\n    \n     \n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nvar waitForGlobal = async () =>{\n    if (window.tronWeb) {\n        let tronWeb = window.tronWeb;\n        const nodes = await tronWeb.isConnected();\n        const connected = !Object.entries(nodes).map(([name, connected]) => {\n            if (!connected) {\n              //  alert(\"Please install TronLink Wallet\")\n            }\n            return connected;\n        }).includes(false);\n        ReactDOM.render(<App />, document.getElementById('root'));\n        if (connected){\n           \n        } else {\n          //  console.error(`Error: TRON node is not connected`);\n           // alert(\"Please install TronLink Wallet\");\n            setTimeout(async () => {\n                await waitForGlobal();\n            }, 1);\n        }\n\n    } else {\n       // alert(\"Please install TronLink Wallet\");\n        setTimeout(async () => {\n            await waitForGlobal();\n        }, 1);\n    }\n};\n\nwaitForGlobal().then();\n\n"],"sourceRoot":""}